from tuf.libtuf import *
# Create repository
# Part 1
generate_and_write_rsa_keypair("path/to/root_key", bits = 2048, password = "Mysslove1314")
generate_and_write_rsa_keypair("path/to/root_key2", password = "Mysslove1314")
public_root_key = import_rsa_publickey_from_file("path/to/root_key.pub")
private_root_key = import_rsa_privatekey_from_file("path/to/root_key", "Mysslove1314")
repository = create_new_repository("path/to/repository/")
repository.root.add_key(public_root_key)
# repository.root.keys ['b23514431a53676595922e955c2d547293da4a7917e3ca243a175e72bbf718df']
public_root_key2 = import_rsa_publickey_from_file("path/to/root_key2.pub")
repository.root.add_key(public_root_key2)
repository.root.threshold = 2
private_root_key2 = import_rsa_privatekey_from_file("path/to/root_key2", password="Mysslove1314")
repository.root.load_signing_key(private_root_key)
repository.root.load_signing_key(private_root_key2)
repository.status()
generate_and_write_rsa_keypair("path/to/targets_key", password="Mysslove1314")
generate_and_write_rsa_keypair("path/to/release_key", password="Mysslove1314")
generate_and_write_rsa_keypair("path/to/timestamp_key", password="Mysslove1314")
repository.targets.add_key(import_rsa_publickey_from_file("path/to/targets_key.pub"))
repository.release.add_key(import_rsa_publickey_from_file("path/to/release_key.pub"))
repository.timestamp.add_key(import_rsa_publickey_from_file("path/to/timestamp_key.pub"))
private_targets_key = import_rsa_privatekey_from_file("path/to/targets_key", "Mysslove1314")
private_release_key = import_rsa_privatekey_from_file("path/to/release_key", "Mysslove1314")
private_timestamp_key = import_rsa_privatekey_from_file("path/to/timestamp_key", "Mysslove1314")
repository.targets.load_signing_key(private_targets_key)
repository.release.load_signing_key(private_release_key)
repository.timestamp.load_signing_key(private_timestamp_key)
repository.timestamp.expiration = "2014-10-28 12:08:00"
repository.targets.compressions = ["gz"]
repository.release.compressions = ["gz"]
# Part 2
repository = load_repository("path/to/repository/")
list_of_targets = repository.get_filepaths_in_directory("path/to/repository/targets/", recursive_walk=False, followlinks=True)
repository.targets.add_targets(list_of_targets)
private_targets_key =  import_rsa_privatekey_from_file("path/to/targets_key", "Mysslove1314")
repository.targets.load_signing_key(private_targets_key)
private_root_key = import_rsa_privatekey_from_file("path/to/root_key", "Mysslove1314")
private_root_key2 = import_rsa_privatekey_from_file("path/to/root_key2", "Mysslove1314")
private_release_key = import_rsa_privatekey_from_file("path/to/release_key", "Mysslove1314")
private_timestamp_key = import_rsa_privatekey_from_file("path/to/timestamp_key", "Mysslove1314")
repository.root.load_signing_key(private_root_key)
repository.root.load_signing_key(private_root_key2)
repository.release.load_signing_key(private_release_key)
repository.timestamp.load_signing_key(private_timestamp_key)
generate_and_write_rsa_keypair("path/to/unclaimed_key", bits=2048, password="Mysslove1314")
public_unclaimed_key = import_rsa_publickey_from_file("path/to/unclaimed_key.pub")
repository.targets.delegate("unclaimed", [public_unclaimed_key], [])
private_unclaimed_key = import_rsa_privatekey_from_file("path/to/unclaimed_key", "Mysslove1314")
repository.targets.unclaimed.load_signing_key(private_unclaimed_key)
repository.targets.unclaimed.version = 2
repository.targets.unclaimed.delegate("django", [public_unclaimed_key], [], restricted_paths=["path/to/repository/targets/django/"])
repository.targets.unclaimed.django.load_signing_key(private_unclaimed_key)
repository.targets.unclaimed.django.add_target("path/to/repository/targets/django/file4.txt")
repository.targets.unclaimed.django.compressions = ["gz"]

repository.targets.unclaimed.delegate("flask", [public_unclaimed_key], [])
repository.targets.unclaimed.revoke("flask")

# Create Client
create_tuf_client_directory("path/to/repository/", "path/to/client/")